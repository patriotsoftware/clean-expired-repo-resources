name: Clean Up Expired Repository Resources
author: DevOps
description: Clean up expired respository resources based retention policy

inputs:
  namespace:
    description: 'Helm namespace'
    required: true
  release-names-array:
    description: 'Release names array'
    default: ''
    required: false
  days-rentention:
    description: 'Retention policy days'
    required: false
    default: 14
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  cdk-folder:
    description: 'CDK folder path. Default is deploy.'
    required: false
    default: 'deploy'
    
runs:
  using: 'composite'
  steps:
  - name: Set release names array
    id: release-names
    shell: bash
    run: |
      # namespace=${{ inputs.namespace }}
      passed=${{ inputs.release-names-array }}
      # single="(\"$namespace\")"
      # echo "Namespace:$namespace Single:$single"
      # if [ "$passed[@]" != '']; then
         single="${passed[@]}"  
      # fi
      echo "array="$single" >> $GITHUB_OUTPUT

  - name: Checkout repository
    uses: actions/checkout@v3
    with:
      fetch-depth: 0 # Fetch all history for all branches and tags

  - name: Fetch all branches
    shell: bash
    run: git fetch --all

  - name: Expired Branches
    id: expired-branches
    shell: bash
    run: |
      EXPIRATION_DATE=$(date -d "${{ inputs.days-rentention }} days ago" +%s)
      branches=()
      echo "/// ${{ inputs.namespace }} /// Branches with last commit $(date -d @${EXPIRATION_DATE} +'%Y-%m-%d %H:%M:%S') and older are expired. Resources can be restored with another branch deploy."

      for branch in $(git branch -r | grep -v '\->'); do
        BRANCH_NAME=${branch#origin/}
        LAST_COMMIT=$(git log -1 --format=%ct $branch)

        if [ "$LAST_COMMIT" -lt "$EXPIRATION_DATE" ] && [ "$BRANCH_NAME" != "main" ]; 
        then
          LAST_COMMIT_DATE=$(date -d @$LAST_COMMIT +'%Y-%m-%d %H:%M:%S')
          
          echo "$LAST_COMMIT_DATE last commit $BRANCH_NAME"
          branches+=($BRANCH_NAME)        
        fi
      done

      echo "----"
      echo "array=${branches[@]}" >> $GITHUB_OUTPUT

  - name: Helm Uninstall
    shell: bash
    run: |
      for branch in ${{ steps.expired-branches.outputs.array }};
      do
        array=${{ inputs.release-names-array }}
        for r in ${array[@]};
        do
          release_name=$r-$branch
          echo "helm uninstall -n ${{ inputs.namespace }} $release_name"
        done
      done